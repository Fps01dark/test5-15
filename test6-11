#define _CRT_SECURE_NO_WARNINGS
//#include<stdio.h>
//#include<string.h>
//void len(char**paa, int n)
//{
//	int i = 0, j = 0;
//	int k = 0;
//	for (i = 0; i < n - 1; i++)
//	{
//		k = i;
//		for (j = i; i < n; j++)
//		{
//			if (sizeof(**(paa + j))>sizeof( **(paa + k)))
//				k = j;
//		}
//		char tmp[20] = { 0 };
//		tmp[20] = **(paa + k);
//		**(paa + k) = **(paa + i);
//		**(paa + i) = tmp[20];
//	}
//}
//int main()
//{
//	char str[5][20];
//	int i = 0;
//	for (i = 0; i < 5; i++)
//	{
//		gets(str[i]);
//	}
//	char *pa[5] = { &str[0][20], &str[1][20], &str[2][20], &str[3][20], &str[4][20] };
//	char **paa = pa;
//	len(paa, 5);
//	for (i = 0; i < 5; i++)
//	{
//		printf("%s\n", *pa[i]);
//	}
//	return 0;
//}
#include<stdio.h>
//#include<stdlib.h>
//#define N 20//定义所有的N为20
//int Strcmp(char* p1, char* p2) {
//	for (int i = 0; i < N; ++i) {
//		if (p1[i] != p2[i]) {
//			return p1[i] - p2[i];
//		}
//		else if (p1[i] == '\0' && p2[i] == '\0') {
//			return 0;
//		}
//	}
//	return 0;
//}
//void fun(char** str) {
//	char* temp;
//	for (int i = 0; i < 5; ++i) {
//		for (int j = i + 1; j < 5; ++j) {
//			if (Strcmp(*(str + i), *(str + j)) > 0) {
//				temp = str[i];
//				str[i] = str[j];
//				str[j] = temp;
//			}
//		}
//	}
//}
//int main()
//{
//	char str1[N] = { '\0' };
//	char str2[N] = { '\0' };
//	char str3[N] = { '\0' };
//	char str4[N] = { '\0' };
//	char str5[N] = { '\0' };
//	//定义指针数组str, 由5个指向char型数据的指针元素组成, 这5个指针元素分别是指向五个字符数组的指针
//	char* str[5] = { str1, str2, str3, str4, str5 };
//	char** p = str;
//	for (int i = 0; i < 5; ++i) {
//		printf("请输入第%d个字符串\n", i + 1);
//		fgets(*(p + i), N, stdin);
//	}
//	system("cls");
//	//消除用fgets函数接受字符串后字符串末尾的换行符'\n'
//	for (int i = 0; i < 5; ++i) {
//		for (char* q = *(p + i); *q; ++q) {
//			if (*q == '\n') {
//				*q = '\0';
//				break;
//			}
//		}
//	}
//	printf("排序前:\n");
//	for (int i = 0; i < 5; ++i) {
//		printf("%s\n\n", *(p + i));
//	}
//	fun(p);
//	printf("排序后:\n");
//	for (int i = 0; i < 5; ++i) {
//		printf("%s\n\n", *(p + i));
//	}
//	return 0;
//}
struct
{
	int year;
	int month;
	int day;
}date;
int main()
{
	int i = 0;
	int days = 0;
	int day_tab[13] = { 0.31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
	scanf("%d %d %d", &date.year, &date.month, &date.day);
	for (i = 1; i < date.month; i++)
	{
		days = days + day_tab[i];
	}
	days = days + date.day;
	if ((date.year % 4 == 0 && date.year % 100 != 0 || date.year % 400 == 0) && date.month >= 3)
		days = days + 1;
	printf("%d/%d is the %dth day in %d.\n", date.month, date.day, days, date.year);
	return 0;
}
