#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
//输入a, b, c三个值
//输出其中最大值
//int Max(int x, int y)
//{
//	int z = 0;
//	if (x > y)
//		z = x;
//	else
//		z = y;
//	return z;
//}
//int main()
//{
//	int i = 0;
//	int j = 0;
//	int k = 0;
//	scanf("%d%d%d", &i, &j, &k);
//	int max = Max(i, Max(j,k));
//	printf("max=%d\n", max);
//	return 0;
//}
//有10个数要求按照从小到大的顺序输出
//冒泡排序
//int main()
//{
//	int arr[10];
//	printf("请输入10个任意整数\n");
//	int i = 0;
//	int j = 0;
//	int t = 0;
//	for (i = 0; i < 10; i++)
//	{
//		scanf("%d", &arr[i]);
//	}
//	
//	for (j = 0; j <9; j++)//十个数要比较九趟
//	{
//		//进行一趟
//		for (i = 0; i < 9-j; i++)
//		{
//			if (arr[i] > arr[i + 1])
//			{
//				t = arr[i];
//				arr[i] = arr[i + 1];
//				arr[i + 1] = t;
//			}
//		}
//
//	}
//	for (i = 0; i < 10; i++)
//	{
//		printf(" %d ",arr[i]);
//	}
//	return 0;
//}
//写代码：计算1 + 2 + 3 + 4 + ... + 99 + 100的和
//int main()
//{
//	int a = 0;
//	int sum = 0;
//	for (a = 0; a <= 100; a++)
//	{
//		sum += a;//等价于sum=sum+a
//	}
//	printf("sum=%d\n", sum);
//	return 0;
//}
//写一个代码，判断一个数是否同时被3和5整除
//int main()
//{
//	int i = 0;
//	scanf("%d", &i);
//	if (i % 3 == 0 && i % 5 == 0)
//	{
//		printf("yes\n");
//	}
//	else
//	{
//		printf("no\n");
//	}
//	return 0;
//}
//写代码，将100 - 200之间的素数输出
int main()
{
	int i = 0;
	int j = 0;
	for (i = 100; i <= 200; i++)
	{
		for (j = 2; j < i; j++)
		{
			if (i%j == 0)
			{
				break;
			}
		}
		if (i == j)
			printf(" %d ", i);
	}
	return 0;
}
//写一个代码打印1 - 100之间所有3的倍数的数字
//int main()
//{
//	int i = 0;
//	for (i = 1; i <= 100; i++)
//	{
//		if (i % 3 == 0)
//			printf(" %d ", i);
//	}
//	return 0;
//}
//给定两个数，求这两个数的最大公约数
//思路：辗转相除法
//例子：18和24的最大公约数
//第一次：a = 18  b = 24  c = a%b = 18 % 24 = 18
//循环中：a = 24   b = 18
//第二次：a = 24   b = 18  c = a%b = 24 % 18 = 6
//循环中：a = 18   b = 6
//第三次：a = 18   b = 6   c = a%b = 18 % 6 = 0
//循环结束
//int main()
//{
//	int a = 0;
//	int b = 0;
//	int c = 0;
//	scanf("%d%d", &a, &b);
//	while (c = a%b)//0为假，其它数为真
//	{
//		a = b;
//		b = c;
//	}
//	printf("他们的最大公约数是：%d\n", b);
//	return 0;
//}
//打印1000年到2000年之间的闰年
//闰年的条件：如果N能够被4整除，并且不能被100整除，则是闰年
//或者：N能被400整除，也是闰年
//int main()
//{
//	printf("闰年为：");
//	int i = 0;
//	for (i = 1000; i <= 2000; i++)
//	{
//		if ((i % 4 == 0 && i % 100 != 0) || (i % 400 == 0))
//			printf("%d\n", i);
//	}
//	return 0;
//}
//编写程序数一下 1到 100 的所有整数中出现多少个数字9
//int main()
//{
//	int count = 0;
//	int i = 0;
//	for (i = 1; i <= 100; i++)
//	{
//		if (i % 10 == 9)
//		{
//			printf(" %d ", i);
//			count++;
//		}
//		if (i / 10 == 9)
//		{
//			printf(" %d ", i);
//			count++;
//		}
//	}
//	printf("个数：%d\n", count);
//	return 0;
//}
//在屏幕上输出9 * 9乘法口诀表
//int main()
//{
//	int i = 0;
//	int j = 0;
//	for (i = 1; i < 10; i++)
//	{
//		for (j = 1; j < i + 1; j++)
//		{
//			printf("%2d*%2d=%2d", i, j, i*j);
//		}
//		printf("\n");
//	}
//	return 0;
//}
//计算1 / 1 - 1 / 2 + 1 / 3 - 1 / 4 + 1 / 5 …… + 1 / 99 - 1 / 100 的值，打印出结果
//int main()
//{
//	int i = 0;
//	double sum = 0;
//	int flag = 1;
//	for (i = 1; i <= 100; i++)
//	{
//		sum += flag*(1.0 / i);
//		flag = -flag;
//	}
//	printf("sum=%lf\n", sum);
//	return 0;
//}
//求10 个整数中最大值
//int main()
//{
//	int arr[10] = { 0 };
//	int i = 0;
//	int max = 0;
//	for (i = 0; i < 10; i++)
//	{
//		scanf("%d", &arr[i]);
//	}
//	for (i = 0; i < 10; i++)
//	{
//		if (max < arr[i])
//			max = arr[i];
//	}
//	printf("max=%d\n", max);
//	return 0;
//}
//求Sn = a + aa + aaa + aaaa + aaaaa的前5项之和，其中a是一个数字，
//例如：2 + 22 + 222 + 2222 + 22222
//int main()
//{
//	int a = 0;
//	int b = 0;
//	int c = 0;
//	int sum = 0;
//	scanf("%d", &b);
//	for (a = 0; a < 5;a++)//进行五个数的相加
//	{
//		c = c * 10 + b;
//		sum += c;
//	}
//	
//	printf("sum=%d\n", sum);
//	return 0;
//}
//打印菱形
//int main()
//{
//	int i = 0;
//	int j = 0;
//	int row = 0;
//	scanf("%d", &row);
//	for (i = 0; i < row; i++)//打印上半部分
//	{
//		//打印空格
//		for (j = 0; j < row - 1 - i; j++)
//			printf(" ");
//		//打印星星
//		for (j = 0; j <2 * i + 1; j++)
//			printf("*");
//		printf("\n");
//	}
//	for (i = 0; i < row-1; i++)
//	{
//		for (j = 0; j <= i; j++)
//			printf(" "); 
//		for (j = 0; j < 2*(row-1-i)-1; j++)
//			printf("*");
//		printf("\n");
//	}
//	return 0;
//}
